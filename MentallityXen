local library = {}

local toggled = false

function library:CreateWindow(name)
    local Design = Instance.new("ScreenGui")
    local topmenu = Instance.new("Frame")
    local container = Instance.new("Frame")
    local insidecontainer = Instance.new("Frame")
    local UIGridLayout = Instance.new("UIGridLayout")
    local Title = Instance.new("TextLabel")
    local ToggleMenu = Instance.new("TextButton")

    Design.Name = "Design"
    Design.Parent = game.CoreGui
    Design.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    topmenu.Name = "topmenu"
    topmenu.Parent = Design
    topmenu.BackgroundColor3 = Color3.new(0.945098, 0.176471, 0.909804)
    topmenu.BorderColor3 = Color3.new(1, 0.25098, 0.964706)
    topmenu.BorderSizePixel = 0
    topmenu.Position = UDim2.new(0.0350049995, 0, 0.0417207852, 0)
    topmenu.Size = UDim2.new(0, 484, 0, 34)
    topmenu.Active = true
    topmenu.Draggable = true

    container.Name = "container"
    container.Parent = topmenu
    container.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
    container.BorderSizePixel = 0
    container.Position = UDim2.new(0, 0, 0.977130115, 0)
    container.Size = UDim2.new(0, 484, 0, 223)
    container.ClipsDescendants = true

    insidecontainer.Name = "insidecontainer"
    insidecontainer.Parent = container
    insidecontainer.BackgroundColor3 = Color3.new(0.262745, 0.262745, 0.262745)
    insidecontainer.Position = UDim2.new(0.0179153308, 0, 0.045161292, 0)
    insidecontainer.Size = UDim2.new(0, 467, 0, 191)

    UIGridLayout.Parent = insidecontainer
    UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIGridLayout.CellSize = UDim2.new(0, 150, 0, 32)

    Title.Name = "Title"
    Title.Parent = topmenu
    Title.BackgroundColor3 = Color3.new(1, 1, 1)
    Title.BackgroundTransparency = 1
    Title.Position = UDim2.new(0.104665376, 0, -0.0105882529, 0)
    Title.Size = UDim2.new(0, 384, 0, 34)
    Title.Font = Enum.Font.SourceSans
    Title.TextColor3 = Color3.new(1, 1, 1)
    Title.TextSize = 25
    Title.Text = name

    ToggleMenu.Name = "ToggleMenu"
    ToggleMenu.Parent = topmenu
    ToggleMenu.BackgroundColor3 = Color3.new(0, 1, 0)
    ToggleMenu.BackgroundTransparency = 1
    ToggleMenu.BorderSizePixel = 0
    ToggleMenu.Position = UDim2.new(0.915289283, 0, -0.0294117648, 0)
    ToggleMenu.Size = UDim2.new(0, 41, 0, 33)
    ToggleMenu.Font = Enum.Font.SourceSans
    ToggleMenu.Text = "V"
    ToggleMenu.TextColor3 = Color3.new(1, 1, 1)
    ToggleMenu.TextScaled = true
    ToggleMenu.TextSize = 14
    ToggleMenu.TextWrapped = true
    ToggleMenu.MouseButton1Down:Connect(function()
        if toggled then
            toggled = false
            container:TweenSize(UDim2.new(0, 484,0, 0), "InOut", "Linear", 0.1)
            ToggleMenu.Rotation = 180
        else
            toggled = true
            container:TweenSize(UDim2.new(0, 484,0, 223), "InOut", "Linear", 0.1)
            ToggleMenu.Rotation = 0
        end
    end)

    local MentalLibrary = {}

    function MentalLibrary:CreateButton(text, callback)
        local callback = callback or function() end

        local TextButton = Instance.new("TextButton")

        TextButton.Parent = insidecontainer
        TextButton.BackgroundColor3 = Color3.new(0, 1, 0)
        TextButton.BorderColor3 = Color3.new(0.945098, 0.176471, 0.909804)
        TextButton.BorderSizePixel = 0
        TextButton.Position = UDim2.new(0.0741089582, 0, 0.13270843, 0)
        TextButton.Size = UDim2.new(0, 167, 0, 46)
        TextButton.Font = Enum.Font.SourceSans
        TextButton.TextColor3 = Color3.new(1, 1, 1)
        TextButton.TextSize = 25
        TextButton.TextWrapped = true
        TextButton.Text = text

        TextButton.MouseButton1Down:Connect(function()
            pcall(callback)
        end)
    end

    function MentalLibrary:CreateToggle(text, callback)
        local actions = {}
        local enabled = false

        text = text or "New Toggle"
        callback = callback or function() end

        local Toggle = Instance.new("TextLabel")
        local Background = Instance.new("TextButton")
        local OnOffToggle = Instance.new("TextButton")

        Toggle.Name = "Toggle"
        Toggle.Parent = insidecontainer
        Toggle.BackgroundColor3 = Color3.new(0, 1, 0)
        Toggle.Position = UDim2.new(0.334047109, 0, 0, 0)
        Toggle.Size = UDim2.new(0, 149, 0, 32)
        Toggle.Font = Enum.Font.SourceSans
        Toggle.Text = text
        Toggle.TextColor3 = Color3.new(1, 1, 1)
        Toggle.TextSize = 25
        Toggle.TextWrapped = true

        Background.Name = "Background"
        Background.Parent = Toggle
        Background.BackgroundColor3 = Color3.new(0.168627, 0.168627, 0.168627)
        Background.Position = UDim2.new(0.773333311, 0, 0.1875, 0)
        Background.Size = UDim2.new(0, 27, 0, 20)
        Background.Font = Enum.Font.SourceSans
        Background.Text = ""
        Background.TextColor3 = Color3.new(0, 0, 0)
        Background.TextSize = 14

        OnOffToggle.Name = "OnOffToggle"
        OnOffToggle.Parent = Background
        OnOffToggle.BackgroundColor3 = Color3.new(1, 0, 0)
        OnOffToggle.BorderSizePixel = 0
        OnOffToggle.Position = UDim2.new(0.629629612, 0, 0, 0)
        OnOffToggle.Size = UDim2.new(0, 10, 0, 20)
        OnOffToggle.Font = Enum.Font.SourceSans
        OnOffToggle.Text = ""
        OnOffToggle.TextColor3 = Color3.new(0, 0, 0)
        OnOffToggle.TextSize = 14

        local function Fire()
            enabled = not enabled
            OnOffToggle:TweenPosition(enabled and UDim2.new(0, 0,0, 0) or UDim2.new(0.63, 0,0, 0), "InOut", "Linear", 0.1)
            OnOffToggle.BackgroundColor3 = enabled and Color3.fromRGB(77, 202, 82) or Color3.fromRGB(206, 0, 0)
            pcall(callback, enabled)
        end

        OnOffToggle.MouseButton1Click:connect(Fire)

        function actions:Set(arg)
            OnOffToggle:TweenPosition(enabled and UDim2.new(0, 0,0, 0) or UDim2.new(0.63, 0,0, 0), "InOut", "Linear", 0.1)
            OnOffToggle.BackgroundColor3 = enabled and Color3.fromRGB(77, 202, 82) or Color3.fromRGB(206, 0, 0)
            pcall(callback, arg)
        end
    end
    return MentalLibrary
end

return library
